{
  "name": "proyecto-final-trimestre---tienda-on-line---daw",
  "version": "1.0.0",
  "description": "Haciendo uso de JS vamos a realizar una aplicación para una tienda on-line. Para ello nos vamos a basar en una API (https://fakestoreapi.com/ , http://www.omdbapi.com/ o similar ) la cual nos simula el Backend necesario para este desarrollo. Tu primera tarea será pues estudiar esta API y hacer las pruebas oportunas antes de comenzar el desarrollo.\r La aplicación debe, basandose en el desarrollo de interfaz entregado:\r 1.\r Login contra Json Server\r 2.\r Seguridad anti boot en el login o confirmación de pedido\r 3.\r Simulación de Token JWT o en su defecto cualquier otro token.\r 4.\r Mostrar listados de productos.\r 5.\r Los productos se listan de 8 en 8, cargando nuevos si los hay mediante la técnica conocida como Scroll Infinito o paginación. Cuando este se realice debe darse información al respecto al usuario mediante algún tipo de preload o mensaje.\r 6.\r Mostrar listados por categoría.\r 7.\r Ordenar los listados ascendentemente o descendentemente.\r 8.\r Mostrar inicialmente un listado de productos, teniendo cada uno de ellos al menos un nombre, imagen y precio.\r 9.\r Gestionar un carrito de la compra, de tal modo que cada producto debe ser posible agregarlo al carrito.\r 10.\r Si se selecciona un artículo debe mostrarse el detalle completo para éste (todos los datos que proporciona la API), dando la posibilidad de comprarlo.\r 11.\r Debe ser posible acceder al carro de la compra completo para simular la realización final del pedido.\r Todos los puntos anteriores son los mínimos e imprescindibles para alcanzar un total de 7 puntos. El resto de puntos hasta el 10 se obtienen según los siguientes puntos:\r 1.\r (1 punto) Almacena en local el carrito del usuario, de tal modo que si vuelve a cargar la página en el mismo navegador, el carrito se mostrará tal y como lo dejó.\r 2.\r (0.5 punto) El carrito es capaz de manejar, para cada artículo, un número mayor a 1 de elementos. Por tanto si añado una nueva unidad de un artículo ya presente en el carrito, debe incrementarse este valor y no duplicar el artículo.\r 3.\r (0,5 punto) El carrito permite modificar el número de artículos, pudiendo borrarlos o modificar su número de unidades.\r 4.\r (1 punto) Haciendo uso de la librería emailjs.com haz que tu web envíe emails al usuario al finalizar pedido.\r 5.\r La interfaz será según las especificaciones al respecto del proyecto correspondiente del módulo Desarrollo de Interfaces Web. Debe desarrollarse una web del tipo SAP en la que en ningún momento se produce recarga, tan sólo cambiamos las vistas (Este punto es opcional).\r La entrega del proyecto se hará a través de un repositorio github, indicando claramente en el README la URL. La nota final se consigue tras la defensa personalizada del\r proyecto para comprobar que el alumno/a entiende perfectamente su código y es capaz de realizar cambios sencillos conforme se le piden. La incapacidad para comprender y defender su propio código supone el suspenso del proyecto.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@emailjs/browser": "^4.4.1"
  }
}
